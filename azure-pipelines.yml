variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm
  node_version: '12.4.0'

trigger:
  - master

# For current versions of vm's using the `*-latest` alias:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    # mac:
    #   imageName: 'macos-latest'
    # windows:
    #   # NOTE (lucas): Also blocked on Windows 2019 by
    #   # https://jira.mongodb.org/browse/NODE-2465
    #   # imageName: 'windows-latest'
    #   imageName: 'vs2017-win2016'
pool:
  vmImage: $(imageName)

steps:
  - script: |
      set -e
      sudo apt-get update

      # Start xvfb running.
      sudo apt-get install -y libxkbfile-dev pkg-config libsecret-1-dev libxss1 dbus xvfb libgtk-3-0
      sudo cp scripts/xvfb.init /etc/init.d/xvfb
      sudo chmod +x /etc/init.d/xvfb
      sudo update-rc.d xvfb defaults
      sudo service xvfb start

      # Give xvfb a moment to start.
      sleep 3;

      # Login our credential store to avoid timeout when storing and retrieving.
      sudo apt-get install -y gnome-keyring python-gnomekeyring
      eval $(dbus-launch --sh-syntax);
      eval $(echo -n "" | /usr/bin/gnome-keyring-daemon --login);
      eval $(/usr/bin/gnome-keyring-daemon --components=secrets --start);
      /usr/bin/python -c "import gnomekeyring;gnomekeyring.create_sync('login', '');";

    displayName: 'Install native Linux dependencies'
    condition: in(variables['agent.os'], 'Linux')
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install node@$(node_version)'
  # Proper caching for `npm ci` to be fast
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops#nodejsnpm
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
        npm
      path: $(npm_config_cache)
    displayName: Cache npm
  # TODO (lucas): Caching `./.vscode-test` in the future would be nice
  # so vscode-test isn't downloading the vscode zip everytime. same goes for mongoddb-runner.
  - bash: |
      npm i -g npm@latest;
      npm ci;
    displayName: 'Install dependencies from npm'

  - bash: DISPLAY=:10 npm run test
    displayName: 'Run Tests'
    env:
      SEGMENT_KEY: $(segmentKey)
  - bash: ls -alh
    displayName: 'Post Tests'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: 'test-results.xml'
      failTaskOnFailedTests: true

  - bash: |
      npm i -g vsce;
      vsce package
    displayName: 'Build .vsix'
    env:
      SEGMENT_KEY: $(segmentKey)

  # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#set-variables-in-scripts
  - bash: |
      echo "##vso[task.setvariable variable=extension_version]`npx json -f package.json version`"
    displayName: 'Set extension_version variable from package.json version'
  - bash: |
      ls -alh mongodb-vscode-$(extension_version).vsix
    displayName: 'Check .vsix filesize'
